// ModuleGenerator is fairly simple. We just need to check the generatorIsActive
// field on the module in order to determine whether it is active.
//
// It only really seems to be used by RTGs and launch clamps (even in mods) so
// this setup here should be simple enough for pretty much all use cases.
//
// TODO: This ignores the efficiency field on the generator. It may be worth
//       building a specialized module to do exactly that.

@PART[*]:HAS[@MODULE[ModuleGenerator]]:FOR[ZZZ-BackgroundResourceProcessing]
{
    %brpModuleIndexCounter = -1
}

@PART[*]:HAS[@MODULE[ModuleGenerator]]:FOR[ZZZ-BackgroundResourceProcessing]
{
    @brpModuleIndexCounter += 1

    @MODULE[ModuleGenerator],0
    {
        %brpOldName = #$name$
        %brpModuleIndex = #$../brpModuleIndexCounter$
        @name = BRPTemporarilyRenamed
    }

    MM_PATCH_LOOP {}
}

@PART[*]:HAS[@MODULE[BRPTemporarilyRenamed]]:FOR[ZZZ-BackgroundResourceProcessing]
{
    @MODULE[BRPTemporarilyRenamed]:HAS[#brpOldName]
    {
        @name = #$brpOldName$
        !brpOldName = delete
    }
}

@PART[*]:HAS[@MODULE[ModuleGenerator]]:FOR[ZZZ-BackgroundResourceProcessing]
{
    +MODULE[ModuleGenerator]:HAS[~isThrottleControlled[?rue]]
    {
        %TargetModule = #$name$
        %TargetIndex = #$brpModuleIndex$
        @name = ModuleBackgroundConditionalConverter

        %Condition = generatorIsActive
        %brpMarker = true

        @RESOURCE { |_ = INPUT_RESOURCE }

        @INPUT_RESOURCE
        {
            %ResourceName = #$name$
            %Ratio = #$rate$

            !name = delete
            !rate = delete
        }

        @OUTPUT_RESOURCE
        {
            %ResourceName = #$name$
            %Ratio = #$rate$

            !name = delete
            !rate = delete
        }

        // The solver handles negative rates weirdly, so here we convert
        // negative rates to a node of the opposite type.
        @INPUT_RESOURCE:HAS[#Ratio[<0]] {
            |_ = OUTPUT_RESOURCE

            @Ratio *= -1
        }

        @OUTPUT_RESOURCE:HAS[#Ratio[<0]] {
            |_ = INPUT_RESOURCE

            @Ratio *= -1
        }
    }

    // We bump up the priority of generator modules with no inputs.
    //
    // This way the outputs of, e.g., RTGs are used before fuel cells.
    // This matters more when nuclear reactors come into the picture.
    @MODULE[ModuleBackgroundConditionalConverter]:HAS[#brpMarker[true],!INPUT_RESOURCE]
    {
        %priority = 10
    }

    @MODULE[ModuleBackgroundConditionalConverter]:HAS[#brpMarker[true]]
    {
        !brpModuleGeneratorMarker = delete

        !isAlwaysActive = delete
        !isGroundFixture = delete
    }
}
