// SystemHeat integration.
//
// For our purposes we can treat most SystemHeat modules as being equivalent to
// 

// ModuleSystemHeatConverter gets treated exactly the same as ModuleResourceConverter
// from a background processing perspective.
@PART[*]:HAS[@MODULE[ModuleSystemHeatConverter]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    +MODULE[ModuleSystemHeatConverter],*
    {
        %ConverterModule = #$name$
        @name = ModuleBackgroundResourceConverter
        // We keep ConverterName if specified

        %brpConverterCleanupMarker = true
        %brpSystemHeatConverterMarker = true

        // Keep INPUT_RESOURCE, OUTPUT_RESOURCE, REQUIRED_RESOURCE
        // but delete everything else
    }

    // Fudge priorities somewhat by using FillAmount as a proxy
    @MODULE[ModuleBackgroundResourceConverter]:HAS[#brpSystemHeatConverterMarker[true],#FillAmount]
    {
        %priority = -5
    }

    @MODULE[ModuleBackgroundResourceConverter]:HAS[#brpSystemHeatConverterMarker[true],#FillAmount]
    {
        !brpSystemHeatConverterMarker = delete
    }
}

// ModuleSystemHeatHarvester gets treated exactly the same as ModuleResourceHarvester
@PART[*]:HAS[@MODULE[ModuleSystemHeatHarvester]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    +MODULE[ModuleSystemHeatHarvester],*
    {
        %ConverterModule = #$name$
        @name = ModuleBackgroundResourceHarvester
        &ResourceName = Ore

        %brpConverterCleanupMarker = true
    }
}

// ModuleSystemHeatAsteroidHarvester is treated the same as ModuleAsteroidDrill
@PART[*]:HAS[@MODULE[ModuleSystemHeatAsteroidHarvester]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    +MODULE[ModuleSystemHeatAsteroidHarvester]
    {
        %ConverterModule = #$name$
        @name = ModuleBackgroundAsteroidDrill
        %MassResourceName = BRPSpaceObjectMass

        %brpConverterCleanupMarker = true

        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = #$../PowerConsumption$
        }
    }
}

// ModuleSystemHeatCometHarvester is treated the same as ModuleCometDrill
@PART[*]:HAS[@MODULE[ModuleSystemHeatCometHarvester]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    +MODULE[ModuleSystemHeatCometHarvester]
    {
        %ConverterModule = #$name$
        @name = ModuleBackgroundCometDrill
        %MassResourceName = BRPSpaceObjectMass

        %brpConverterCleanupMarker = true

        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = #$../PowerConsumption$
        }
    }
}

// ModuleSystemHeatFissionReactor is a bit more complicated.
//
// It has INPUT_RESOURCE and OUTPUT_RESOURCE for the fission fuel. That works
// as-is. However, ElectricCharge emission is defined by a float curve.
@PART[*]:HAS[@MODULE[ModuleSystemHeatFissionReactor]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    // This adds a brpModuleIndex field with the selected module's index.
    %brpModuleIndexCounter = 0
    @MODULE[ModuleSystemHeatFissionReactor],*
    {
        %brpModuleIndex = #$../brpModuleIndexCounter$
        @../brpModuleIndexCounter += 1
    }

    +MODULE[ModuleSystemHeatFissionReactor]:HAS[~GeneratesElectricity[?alse]]
    {
        %TargetModule = #$name$
        %TargetIndex = #$brpModuleIndex$
        @name = ModuleBackgroundConditionalConverter

        %Condition = Enabled
        %LastUpdateField = LastUpdateTime

        %brpConverterCleanupMarker = true

        +OUTPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            // It's not really possible to represent "get the max entry from this curve" in MM
            // so we hack it here by just taking the last entry in the float curve.
            Ratio = #$../ElectricalGeneration/key,-1[1, ]$
        }
    }

    @MODULE[ModuleSystemHeatFissionReactor] { !brpModuleIndex = delete }
    @MODULE[ModuleBackgroundConditionalConverter] { !brpModuleIndex = delete }
}

// Cleanup for extra fields copied from existing nodes
@PART[*]:HAS[@MODULE[ModuleBackground*]:HAS[#brpConverterCleanupMarker[true]]]:FOR[ZZZ-BackgroundResourceProcessing]:NEEDS[SystemHeat]
{
    !brpModuleIndexCounter = delete

    @MODULE:HAS[#brpConverterCleanupMarker[true]]
    {
        !brpConverterCleanupMarker = delete

        // BaseConverter
        !FillAmount = delete
        !TakeAmount = delete
        !GeneratesHeat = delete
        !UseSpecialistBonus = delete
        !UseSpecialistHeatBonus = delete
        !SpecialistBonusBase = delete
        !AutoShutdown = delete
        !DirtyFlag = delete
        !EfficiencyBonus = delete
        !IsActivated = delete
        !StartActionName = delete
        !StopActionName = delete
        !ToggleActionName = delete
        !resourceOutputName = delete
        !AlwaysActive = delete
        !SpecialistEfficiencyFactor = delete
        !SpecialistHeatFactor = delete
        !DefaultShutoffTemp = delete
        !ExperienceEffect = delete
        !status = delete

        !TemperatureModifier,* {}
        !ThermalEfficiency,* {}

        // ModuleResourceConverter
        // Keep ConvertByMass

        // BaseDrill
        !ImpactRange = delete
        !ImpactTransform = delete
        // !Efficiency = delete

        // ModuleAsteroidDrill, ModuleCometDrill
        !DirectAttach = delete
        !PowerConsumption = delete
        !RockOnly = delete

        // ModuleResourceHarvester
        !CausesDepletion = delete
        !DepletionRate = delete
        !HarvestThreshold = delete
        // !HarvesterType = delete
        // !ResourceName = delete
        // !airSpeedStatic = delete
        !ResourceStatus = delete

        // Pretty much all SystemHeat modules
        !moduleID = delete
        !systemHeatModuleID = delete
        !shutdownTemperature = delete
        !systemOutletTemperature = delete
        !systemPower = delete
        !systemEfficiency {}

        // ModuleSystemHeatFissionReactor
        !HeatGeneration {}
        !NominalTemperature = delete
        !CriticalTemperature = delete
        !CoreDamageRate = delete
        !RepairAmountPerKit = delete
        !CurrentPowerPercent = delete
        !ThrottleIncreaseRate = delete
        !ThrottleDecreaseRate = delete
        !MinimumThrottle = delete
        !ElectricalGeneration {}
        !FuelName = delete
    }
}
