// ModuleCommand includes probe cores and has provisions for consuming resources.
//
// We copy the consumed resources to a ModuleBackgroundConstantConsumer and
// then conditionally set multiplier based on whether hibernation is enabled.
// This unconditionally uses the hibernation rate if available, which differs
// from how the base game handles it but this is probably fine from a gameplay
// perspective.

@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[@RESOURCE]]:FOR[BackgroundResourceProcessing]
{
    +MODULE[ModuleCommand]:HAS[@RESOURCE]
    {
        %name = ModuleBackgroundConstantConsumer

        %brpModuleCommandMarker = true

        // This isn't a field on ModuleCommand but would otherwise conflict
        // with this patch.
        !multiplier = delete
        !minimumCrew = delete
        !remoteControl = delete
        !requiresTelemetry = delete
        !defaultControlPointDisplayName = delete
        !CONTROLPOINT,* {}

        @RESOURCE,* { |_ = INPUT_RESOURCE }
    }

    @MODULE[ModuleBackgroundConstantConsumer]:HAS[#brpModuleCommandMarker[true],#hasHibernation[?rue]]
    {
        &hibernationMultiplier = 0.01

        @INPUT_RESOURCE,* { @Ratio *= #$../hibernationMultiplier$ }
    }

    @MODULE[ModuleBackgroundConstantConsumer]:HAS[#brpModuleCommandMarker[true]]
    {
        !hasHibernation = delete
        !hibernationMultiplier = delete
        !brpModuleCommandInternalMarker = delete
    }
}
