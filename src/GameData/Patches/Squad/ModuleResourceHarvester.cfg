// Resource harvesters are fairly straightforward: they have an abundance,
// and that multiplies the amount of resource they produce.
//
// ModuleBackgroundResourceHarvester takes care of that and we delete all
// the remaining fields that we don't need.

@PART[*]:HAS[@MODULE[ModuleResourceHarvester]]:FOR[BackgroundResourceProcessing]
{
    +MODULE[ModuleResourceHarvester],*
    {
        %ConverterModule = #$name$
        @name = ModuleBackgroundResourceHarvester
        &ResourceName = Ore

        // BaseConverter
        !FillAmount = delete
        !TakeAmount = delete
        !GeneratesHeat = delete
        !UseSpecialistBonus = delete
        !UseSpecialistHeatBonus = delete
        !SpecialistBonusBase = delete
        !AutoShutdown = delete
        !DirtyFlag = delete
        !EfficiencyBonus = delete
        !IsActivated = delete
        !StartActionName = delete
        !StopActionName = delete
        !ToggleActionName = delete
        !resourceOutputName = delete
        !AlwaysActive = delete
        !SpecialistEfficiencyFactor = delete
        !SpecialistHeatFactor = delete
        !DefaultShutoffTemp = delete
        !ExperienceEffect = delete
        !status = delete

        !TemperatureModifier,* {}
        !ThermalEfficiency,* {}

        // BaseDrill
        !ImpactRange = delete
        !ImpactTransform = delete
        // !Efficiency = delete

        // ModuleAsteroidDrill, ModuleCometDrill
        !DirectAttach = delete
        !PowerConsumption = delete
        !RockOnly = delete
        
        // ModuleResourceHarvester
        !CausesDepletion = delete
        !DepletionRate = delete
        !HarvestThreshold = delete
        // !HarvesterType = delete
        // !ResourceName = delete
        // !airSpeedStatic = delete
        !ResourceStatus = delete
    }
}
