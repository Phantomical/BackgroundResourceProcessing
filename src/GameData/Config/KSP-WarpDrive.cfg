// Integration with KSP-WarpDrive

RESOURCE_DEFINITION
{
    name = BRPWarpDriveEMLossPotential

    displayName = #LOC_BRP_KSPWarpDrive_EMLossPotential_DisplayName
    abbreviation = #LOC_BRP_KSPWarpDrive_EMLossPotential_Abbreviation

    density = 0
    unitCost = 0
    hsp = 1
    flowMode = NO_FLOW
    transfer = NONE
    isTweakable = False
    isVisible = False
    volume = 1
}

// The behaviour for this module is a little complicated, but mostly takes the
// form of a bunch of if statements.
//
// We have two different modes we need to care about:
// - not in warp
// - in warp
//
// Not In Warp
// ===========
// In this case we model things like this:
// - there is a warp containment field, it requires EC and produces EM
// - otherwise we lose EM at a fixed decay rate
//
// This is a pretty standard boil-off-type converter so we use the usual pattern:
// - one converter produces a boil-off potential resource
// - one high-priority converter consumes it and EC to prevent boiloff
// - one low-priority converter consumes it and EM to actually do the boiloff
//
// In Warp
// =======
// The warp drive actually doesn't consume anything in warp so there is actually
// nothing to do here.
BACKGROUND_CONVERTER:NEEDS[WarpDrive,!WarpPlugin]
{
    name = StandAloneAlcubierreDrive
    adapter = SelectAll
    ActiveCondition = !%isSlave && !%inWarp

    BACKGROUND_CONVERTER
    {
        adapter = BackgroundConstantConverter

        LastUpdateField = lastTime

        OUTPUT_RESOURCE
        {
            ResourceName = BRPWarpDriveEMLossPotential
            Ratio = 1.0
            FlowMode = NO_FLOW
            DumpExcess = false
        }
    }

    BACKGROUND_CONVERTER
    {
        adapter = BackgroundConstantConverter

        ActiveCondition = %containmentField

        INPUT_RESOURCE
        {
            ResourceName = BRPWarpDriveEMLossPotential
            Ratio = 1.0
            FlowMode = NO_FLOW
        }

        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = %containmentFieldPowerMax * %baseECconsume
            FlowMode = ALL_VESSEL
        }

        OUTPUT_RESOURCE
        {
            ResourceName = ExoticMatter
            Ratio = %containmentFieldPowerMax * %baseEMproduce
            FlowMode = STAGE_STACK_FLOW
            DumpExcess = true
        }

        PRIORITY
        {
            Value = 2
        }
    }

    BACKGROUND_CONVERTER
    {
        adapter = BackgroundConstantConverter

        INPUT_RESOURCE
        {
            ResourceName = BRPWarpDriveEMLossPotential
            Ratio = 1.0
            FlowMode = NO_FLOW
        }

        INPUT_RESOURCE
        {
            ResourceName = ExoticMatter
            Ratio = %containmentFieldPowerMax * %baseEMdecay
            FlowMode = STAGE_STACK_FLOW
        }

        PRIORITY
        {
            Value = -10
        }
    }

    INVENTORY_LINK
    {
        Target = %
        Relation = PUSH_AND_PULL
    }
}

BACKGROUND_INVENTORY:NEEDS[WarpDrive,!WarpPlugin]
{
    name = StandAloneAlcubierreDrive
    adapter = BackgroundEmptyInventory

    ResourceName = BRPWarpDriveEMLossPotential
}
