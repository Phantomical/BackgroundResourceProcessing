// SystemHeat integration.
//
// Most of the modules for SystemHeat are pretty straightforward. We don't
// really care about the extra features they have and they behave exactly
// like the stock module they replace in terms of resource processing.

BACKGROUND_CONVERTER:NEEDS[SystemHeat]
{
    name = ModuleSystemHeatConverter
    adapter = BackgroundResourceConverter

    UsePreparedRecipe = false
}

BACKGROUND_CONVERTER:NEEDS[SystemHeat]
{
    name = ModuleSystemHeatHarvester
    adapter = BackgroundResourceHarvester

    UsePreparedRecipe = false
}

BACKGROUND_CONVERTER:NEEDS[SystemHeat]
{
    name = ModuleSystemHeatAsteroidHarvester
    adapter = BackgroundAsteroidDrill

    UsePreparedRecipe = false
    MassResourceName = BRPSpaceObjectMass
}

BACKGROUND_CONVERTER:NEEDS[SystemHeat]
{
    name = ModuleSystemHeatCometHarvester
    adapter = BackgroundCometDrill

    UsePreparedRecipe = false
}

BACKGROUND_CONVERTER:NEEDS[SystemHeat]
{
    name = ModuleSystemHeatFissionReactor
    adapter = BackgroundGenericConverter

    ActiveCondition = %Enabled

    // The module stores its inputs in some private fields that we need to read
    // in order to get its inputs and outputs.
    InputsField = inputs
    OutputsField = outputs

    // We want to prevent SystemHeat from running its catch-up.
    LastUpdateField = LastUpdateTime

    // Note that we explicitly ignore the hibernation settings on the reactor.
    // BRP allows the reactor to scale all the way down to 0 so hibernation is
    // counterproductive.
    //
    // This is somewhat different from what SystemHeat normally allows, but
    // you can think of it as the reactor periodically coming out of hibernation
    // when power is needed.
}
